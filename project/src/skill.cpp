//**************************************************************
//
// スキル
// Author : 髙野馨將
//
//**************************************************************

//==============================================================
// include
//==============================================================
#include "skill.h"
#include "skill_data_base.h"
#include "player_manager.h"
#include "enemy_manager.h"
#include "enemy.h"
#include "collision_sphere.h"

//--------------------------------------------------------------
// コンストラクタ
//--------------------------------------------------------------
CSkill::CSkill(int nPriority)
{

}

//--------------------------------------------------------------
// デストラクタ
//--------------------------------------------------------------
CSkill::~CSkill()
{

}

//--------------------------------------------------------------
// 初期化処理
//--------------------------------------------------------------
HRESULT CSkill::Init()
{
	// 初期化
	m_CT = 0;

	return S_OK;
}

//--------------------------------------------------------------
// 終了処理
//--------------------------------------------------------------
void CSkill::Uninit(void)
{
	// 破棄処理
	CTask::Uninit();
}

//--------------------------------------------------------------
// 更新処理
//--------------------------------------------------------------
void CSkill::Update(void)
{
	// スキルデータのインスタンスを取得する
	CSkillDataBase *pSkillData = CSkillDataBase::GetInstance();

	if (m_CT > 0)
	{// クールタイムがあれば減少させる
		m_CT--;
	}

#ifdef _DEBUG
	CDebugProc::Print("スキルのクールタイム : %d\n", m_CT);
#endif // _DEBUG
}

//--------------------------------------------------------------
// スキル生成処理
//--------------------------------------------------------------
CSkill *CSkill::Create()
{
	// 生成処理
	CSkill* pSkill = new CSkill;
	pSkill->Init();

	return pSkill;
}

//--------------------------------------------------------------
// スキル1
//--------------------------------------------------------------
void CSkill::Skill1()
{
	if (m_CT == 0)
	{// クールタイムがなければ当たり判定を生成する
		// 当たり判定の持続時間の管理
		CSkillDataBase *pSkillData = CSkillDataBase::GetInstance();
		pSkillData->GetDuration(m_Name);
		
		if (pSkillData->GetAbility(m_Name)(m_apChara))
		{// ヒットした時の効果
			pSkillData->GetHitAbility(m_Name)(m_apChara,m_apChara);
		}

		// クールタイムの設定
		m_CT = pSkillData->GetCT(m_Name);
	}
}

//--------------------------------------------------------------
// スキルの設定
//--------------------------------------------------------------
void CSkill::SetSkill(std::string tag, CCharacter *chara)
{
	// 生成処理
	m_Name = tag;
	m_apChara = chara;
}